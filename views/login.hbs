<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login</title>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
  <!-- Font Awesome Icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body {
      background-color: #121212;
      color: #fff;
      font-family: 'Poppins', sans-serif;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
    }

    .form-container {
      background-color: #1f1f1f;
      border-radius: 10px;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);
      padding: 1.5rem;
      width: 75%;
      max-width: 400px;
      box-sizing: border-box;
    }

    .form-header {
      text-align: center;
      margin-bottom: 1.5rem;
    }

    .form-header h2 {
      font-weight: 600;
      color: #ffc107;
    }

    .btn-warning {
      background-color: #ffc107;
      border: none;
      font-weight: 600;
      transition: all 0.3s ease;
    }

    .btn-warning:hover {
      background-color: #e0a800;
    }

    .form-control:focus {
      border-color: #ffc107;
      box-shadow: 0 0 5px rgba(255, 193, 7, 0.5);
    }

    .form-label {
      font-weight: 500;
      color: #ccc;
    }

    .input-group-text {
      background-color: #1f1f1f;
      border-color: #ffc107;
      color: #ffc107;
    }

    .alert {
      margin-top: 1rem;
    }
  </style>
</head>

<body>
  <div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="form-container">
      <div class="form-header">
        <h2><i class="fas fa-sign-in-alt"></i> Login</h2>
      </div>

      <!-- Error Message Handling -->
      {{#if message}}
      <div class="alert alert-danger">
        <strong>{{message}}</strong>
      </div>
      {{/if}}

      <form id="loginForm">
        <div class="mb-3">
          <label for="email" class="form-label">Email Address</label>
          <div class="input-group">
            <input type="email" id="email" name="Email" class="form-control" placeholder="Email" required>
            <span class="input-group-text"><i class="fas fa-envelope"></i></span>
          </div>
        </div>

        <div class="mb-3">
          <label for="password" class="form-label">Password</label>
          <div class="input-group">
            <input type="password" id="password" name="password" class="form-control" placeholder="Password" required>
            <span class="input-group-text"><i class="fas fa-lock"></i></span>
          </div>
        </div>

        <button type="submit" class="btn btn-warning w-100">Log In</button>
      </form>
    </div>
  </div>

  <script>
    document.getElementById('loginForm').addEventListener('submit', function (event) {
      event.preventDefault(); // Prevent form from submitting normally

      // Get form data
      const email = document.getElementById('email').value.trim();
      const password = document.getElementById('password').value.trim();

      // Validate input fields
      if (!email || !password) {
        alert('Please fill out both email and password.');
        return;
      }

      // Send login request via fetch
      fetch('/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ email, password })
      })
        .then(response => {
          if (!response.ok) {
            // If the response status is not OK, handle errors
            if (response.status === 401) {
              throw new Error('Invalid email or password.');
            } else if (response.status === 400) {
              throw new Error('Email and password are required.');
            } else {
              throw new Error('Unexpected server error. Please try again.');
            }
          }

          // Ensure response is JSON
          const contentType = response.headers.get('Content-Type');
          if (!contentType || !contentType.includes('application/json')) {
            throw new Error('Invalid response from server.');
          }

          return response.json();
        })
        .then(data => {
          if (data.message === 'Login successful.') {
            // Redirect to the dashboard or home page after successful login
            window.location.href = '/profile'; // Adjust to your desired redirect path
          } else {
            throw new Error(data.message || 'Unknown error during login.');
          }
        })
        .catch(error => {
          // Show an error message to the user
          console.error('Error:', error.message);
          alert(error.message);
        });
    });
  </script>
</body>

</html>